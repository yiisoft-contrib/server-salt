server {
	charset utf-8;
	client_max_body_size 128M;
	keepalive_timeout 70;

	listen [::]:443 ssl http2;
	listen 443 ssl http2;

	server_name {{ salt['pillar.get']('discourse:url', grains.id) }}

	access_log  /var/log/nginx/discourse-ssl.access.log;
	error_log   /var/log/nginx/discourse-ssl.error.log;

    location /errorpages/ {
        alias /var/www/errorpages/;
    }

	location /ipb_uploads/ {
		alias /var/www/ipb_uploads/;
	}

	location / {

        error_page 502 =502 /errorpages/discourse_offline.html;
        proxy_intercept_errors on;

        # https://meta.discourse.org/t/adding-an-offline-page-when-rebuilding/45238

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;

        proxy_busy_buffers_size    512k;
		proxy_buffers           16 512k;
		proxy_buffer_size          256k;

		proxy_pass http://unix:/var/discourse/shared/standalone/nginx.http.sock:;

        proxy_redirect off;

	}

	# SSL
	ssl_certificate /var/lib/acme/{{ (pillar.ssl['acme-certs']|first).domains|first }}/fullchain.cer;
	ssl_certificate_key /var/lib/acme/{{ (pillar.ssl['acme-certs']|first).domains|first }}/{{ (pillar.ssl['acme-certs']|first).domains|first }}.key;

	include ssl_params;
}

# make IPB uploads available on www.forum.yiiframework.com but redirect everything else to forum.yiiframework.com
server {
	charset utf-8;
	client_max_body_size 128M;
	keepalive_timeout 70;

	listen [::]:443 ssl http2;
	listen 443 ssl http2;

	server_name *.{{ salt['pillar.get']('discourse:url', grains.id) }};

	access_log  /var/log/nginx/discourse-ssl-wild.access.log;
	error_log   /var/log/nginx/discourse-ssl-wild.error.log;

	location /ipb_uploads/ {
		alias /var/www/ipb_uploads/;
	}

	location / {
		return 301 https://{{ salt['pillar.get']('discourse:url', grains.id) }}$request_uri;
	}

	# SSL
	ssl_certificate /var/lib/acme/{{ (pillar.ssl['acme-certs']|first).domains|first }}/fullchain.cer;
	ssl_certificate_key /var/lib/acme/{{ (pillar.ssl['acme-certs']|first).domains|first }}/{{ (pillar.ssl['acme-certs']|first).domains|first }}.key;

	include ssl_params;
}

